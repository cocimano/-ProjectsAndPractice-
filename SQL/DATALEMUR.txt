/*
Histogram of Tweets [Twitter SQL Interview Question]

Assume you're given a table Twitter tweet data, write a query to obtain a histogram of tweets posted per user in 2022. Output the tweet count per user as the bucket and the number of Twitter users who fall into that bucket.

In other words, group the users by the number of tweets they posted in 2022 and count the number of users in each group.
SOLUTION:
*/
WITH tweet_counts_per_user AS (
    SELECT user_id, COUNT(*) AS tweet_count
    FROM tweets
    WHERE EXTRACT(YEAR FROM tweet_date) = 2022
    GROUP BY user_id
)

SELECT tweet_count AS tweet_bucket, COUNT(*) AS users_num
FROM tweet_counts_per_user
GROUP BY tweet_count
ORDER BY tweet_count;


/*
Data Science Skills [LinkedIn SQL Interview Question]

Given a table of candidates and their skills, you're tasked with finding the candidates best suited for an open Data Science job. You want to find candidates who are proficient in Python, Tableau, and PostgreSQL.

Write a query to list the candidates who possess all of the required skills for the job. Sort the output by candidate ID in ascending order.
SOLUTION:
*/
WITH possibles AS (
  SELECT candidate_id, skill, COUNT(candidate_id) OVER(PARTITION BY candidate_id) AS count
  FROM candidates 
  WHERE skill IN ('Python', 'Tableau', 'PostgreSQL')
  GROUP BY 1,2
)
SELECT DISTINCT candidate_id
FROM possibles
WHERE count = 3;

/*
Assume you're given two tables containing data about Facebook Pages and their respective likes (as in "Like a Facebook Page").

Write a query to return the IDs of the Facebook pages that have zero likes. The output should be sorted in ascending order based on the page IDs.
SOLUTION:
*/
WITH liked AS (
SELECT DISTINCT page_id
FROM pages
INNER JOIN page_likes USING(page_id)
)
SELECT page_id
FROM pages
WHERE page_id NOT IN (SELECT * FROM liked)
ORDER BY page_id;